//Add an external script as script1
var script1; script1 = AddScript("

if(action = 0) //pushed (added to stack)
{
    //init vars/create stuff
    //copy arguments to variables that make sense
    ww = arg1
    hh = arg2
    //up to arg13
    exit;

}
else if(action = 1) //poped (removed from stack)
{
    //done... free stuff
    exit
}
else if(action = 2) //first do something call
{
    //handled below
}
else if(action = 3) //subsequent calls
{
    //handled below
}


var step; step = 1;
var i;
i = 0;
draw_set_color(global.lscolor);
repeat(global.numentries/step)
{
    draw_set_color(merge_color(merge_color(global.rscolor,global.lwcolor,global.rightspectrum[i]),global.lscolor,global.rightwave[i]));
    draw_point((1+ww*global.rightwave[i]),(1+hh*global.rightspectrum[i]));
    //i+=1;
    i+=step;
}

i = 0;
draw_set_color(global.lscolor);
repeat(global.numentries/step)
{
    draw_set_color(merge_color(merge_color(global.rscolor,global.lwcolor,global.rightwave[i]),global.lscolor,global.rightspectrum[i]));
    draw_point((1+ww*global.rightspectrum[i]),(1+hh*global.rightwave[i]));
    //i+=1;
    i+=step;
}
i = 0;
draw_set_color(global.rscolor);
repeat(global.numentries/step)
{
    draw_set_color(merge_color(merge_color(global.rscolor,global.lwcolor,global.leftwave[i]),global.lscolor,global.leftspectrum[i]));
    draw_point((-2+ww-ww*global.leftwave[i]),(-2+hh-hh*global.leftspectrum[i]));
    //i+=1;
    i+=step;
}
i = 0;
draw_set_color(global.rscolor);
repeat(global.numentries/step)
{
    draw_set_color(merge_color(merge_color(global.rscolor,global.lwcolor,global.leftspectrum[i]),global.lscolor,global.leftwave[i]));
    draw_point((-2+ww-ww*global.leftspectrum[i]),(-2+hh-hh*global.leftwave[i]));
    //i+=1;
    i+=step;
}
draw_set_color(c_black);
exit;

");


var size; size = 128;
//set colors
CommandListAdd (SetDataColors,c_red, c_red, c_red, c_red);
//set color rotation
CommandListAdd (SetLeftSpectrumColorSwitch, 3, c_red, c_lime, c_blue);
CommandListAdd (SetRightSpectrumColorSwitch, 4, c_lime, c_blue, c_red,c_green);
CommandListAdd (SetRightWaveColorSwitch, 5, c_blue, c_red, c_green, c_lime, c_aqua);
//set alpha
CommandListAdd (SetDataAlphas,.5, .5, 1, 1);
//make the surface
CommandListAdd (MakeSurf0,size,size,c_black);
//redirect to it
CommandListAdd (DrawOnSurf0);

//Drawing lines on surface

//transform start, will draw from center of surface
//CommandListAdd (TransformStart);
//rotate (initial angle, rot speed)
//CommandListAdd (TransformRotate,0,-1);
//set to center
//CommandListAdd (TransformSetXY,256,256);

//Draw a circle around the surface diameter
//draw from edge spectrum values towards center
//CommandListAdd (DrawLeftSpectrumArc,  0, 0,  254, 156, 0,90)
//again
//CommandListAdd (DrawLeftSpectrumArc,  0, 0,  254, 156, 0,-90)
//now for the right
//CommandListAdd (DrawRightSpectrumArc,  0, 0,  254, 156, 180,90)
//CommandListAdd (DrawRightSpectrumArc,  0, 0,  254, 156, 180,270)

//done with rotation
//CommandListAdd (TransformEnd);

//call the external script
CommandListAdd (ExternalScript,  script1, size,size)

//fix the edges
CommandListAdd (DrawRectColorAlpha,0,0,size,1,c_black,1);
CommandListAdd (DrawRectColorAlpha,0,0,1,size,c_black,1);
CommandListAdd (DrawRectColorAlpha,size,size,0,size-1,c_black,1);
CommandListAdd (DrawRectColorAlpha,size,size,size-1,0,c_black,1);

//this cancels any alpha transfered to the surface
CommandListAdd (SetBlendAdd);
CommandListAdd (DrawRectColorAlpha,0,0,size,size,c_black,1);
CommandListAdd (SetBlendNormal);

//shrink
CommandListAdd (DrawSurface0,-1,-1,size+1,size+1,0,0,size,size,c_white,1);


//draw on screen
CommandListAdd (DrawOnScreen);
CommandListAdd (DrawSurface0,0,0,size,size,0,0,800,512,c_white,1);
